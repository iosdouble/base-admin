<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.nh.system.mapper.SysMenuMapper">
    <resultMap id="BaseResultMap" type="com.nh.common.core.domain.entity.SysMenu">
        <constructor>
            <idArg column="menu_id" javaType="java.lang.Long" jdbcType="BIGINT"/>
            <arg column="menu_name" javaType="java.lang.String" jdbcType="VARCHAR"/>
            <arg column="parent_id" javaType="java.lang.Long" jdbcType="BIGINT"/>
            <arg column="order_num" javaType="java.lang.Integer" jdbcType="INTEGER"/>
            <arg column="path" javaType="java.lang.String" jdbcType="VARCHAR"/>
            <arg column="component" javaType="java.lang.String" jdbcType="VARCHAR"/>
            <arg column="is_frame" javaType="java.lang.Integer" jdbcType="INTEGER"/>
            <arg column="is_cache" javaType="java.lang.Integer" jdbcType="INTEGER"/>
            <arg column="menu_type" javaType="java.lang.String" jdbcType="CHAR"/>
            <arg column="visible" javaType="java.lang.String" jdbcType="CHAR"/>
            <arg column="status" javaType="java.lang.String" jdbcType="CHAR"/>
            <arg column="perms" javaType="java.lang.String" jdbcType="VARCHAR"/>
            <arg column="icon" javaType="java.lang.String" jdbcType="VARCHAR"/>
            <arg column="create_by" javaType="java.lang.String" jdbcType="VARCHAR"/>
            <arg column="create_time" javaType="java.util.Date" jdbcType="TIMESTAMP"/>
            <arg column="update_by" javaType="java.lang.String" jdbcType="VARCHAR"/>
            <arg column="update_time" javaType="java.util.Date" jdbcType="TIMESTAMP"/>
            <arg column="remark" javaType="java.lang.String" jdbcType="VARCHAR"/>
        </constructor>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
    menu_id, menu_name, parent_id, order_num, path, component, is_frame, is_cache, menu_type, 
    visible, status, perms, icon, create_by, create_time, update_by, update_time, remark
  </sql>
    <select id="selectByExample" parameterType="com.nh.common.core.domain.entity.SysMenuExample"
            resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from sys_menu
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from sys_menu
        where menu_id = #{menuId,jdbcType=BIGINT}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from sys_menu
    where menu_id = #{menuId,jdbcType=BIGINT}
  </delete>
    <insert id="insert" parameterType="com.nh.common.core.domain.entity.SysMenu">
    insert into sys_menu (menu_id, menu_name, parent_id, 
      order_num, path, component, 
      is_frame, is_cache, menu_type, 
      visible, status, perms, icon, 
      create_by, create_time, update_by, 
      update_time, remark)
    values (#{menuId,jdbcType=BIGINT}, #{menuName,jdbcType=VARCHAR}, #{parentId,jdbcType=BIGINT}, 
      #{orderNum,jdbcType=INTEGER}, #{path,jdbcType=VARCHAR}, #{component,jdbcType=VARCHAR}, 
      #{isFrame,jdbcType=INTEGER}, #{isCache,jdbcType=INTEGER}, #{menuType,jdbcType=CHAR}, 
      #{visible,jdbcType=CHAR}, #{status,jdbcType=CHAR}, #{perms,jdbcType=VARCHAR}, #{icon,jdbcType=VARCHAR}, 
      #{createBy,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{updateBy,jdbcType=VARCHAR}, 
      #{updateTime,jdbcType=TIMESTAMP}, #{remark,jdbcType=VARCHAR})
  </insert>
    <insert id="insertSelective" parameterType="com.nh.common.core.domain.entity.SysMenu">
        insert into sys_menu
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="menuId != null">
                menu_id,
            </if>
            <if test="menuName != null">
                menu_name,
            </if>
            <if test="parentId != null">
                parent_id,
            </if>
            <if test="orderNum != null">
                order_num,
            </if>
            <if test="path != null">
                path,
            </if>
            <if test="component != null">
                component,
            </if>
            <if test="isFrame != null">
                is_frame,
            </if>
            <if test="isCache != null">
                is_cache,
            </if>
            <if test="menuType != null">
                menu_type,
            </if>
            <if test="visible != null">
                visible,
            </if>
            <if test="status != null">
                status,
            </if>
            <if test="perms != null">
                perms,
            </if>
            <if test="icon != null">
                icon,
            </if>
            <if test="createBy != null">
                create_by,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="updateBy != null">
                update_by,
            </if>
            <if test="updateTime != null">
                update_time,
            </if>
            <if test="remark != null">
                remark,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="menuId != null">
                #{menuId,jdbcType=BIGINT},
            </if>
            <if test="menuName != null">
                #{menuName,jdbcType=VARCHAR},
            </if>
            <if test="parentId != null">
                #{parentId,jdbcType=BIGINT},
            </if>
            <if test="orderNum != null">
                #{orderNum,jdbcType=INTEGER},
            </if>
            <if test="path != null">
                #{path,jdbcType=VARCHAR},
            </if>
            <if test="component != null">
                #{component,jdbcType=VARCHAR},
            </if>
            <if test="isFrame != null">
                #{isFrame,jdbcType=INTEGER},
            </if>
            <if test="isCache != null">
                #{isCache,jdbcType=INTEGER},
            </if>
            <if test="menuType != null">
                #{menuType,jdbcType=CHAR},
            </if>
            <if test="visible != null">
                #{visible,jdbcType=CHAR},
            </if>
            <if test="status != null">
                #{status,jdbcType=CHAR},
            </if>
            <if test="perms != null">
                #{perms,jdbcType=VARCHAR},
            </if>
            <if test="icon != null">
                #{icon,jdbcType=VARCHAR},
            </if>
            <if test="createBy != null">
                #{createBy,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateBy != null">
                #{updateBy,jdbcType=VARCHAR},
            </if>
            <if test="updateTime != null">
                #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="remark != null">
                #{remark,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.nh.common.core.domain.entity.SysMenuExample"
            resultType="java.lang.Long">
        select count(*) from sys_menu
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update sys_menu
        <set>
            <if test="record.menuId != null">
                menu_id = #{record.menuId,jdbcType=BIGINT},
            </if>
            <if test="record.menuName != null">
                menu_name = #{record.menuName,jdbcType=VARCHAR},
            </if>
            <if test="record.parentId != null">
                parent_id = #{record.parentId,jdbcType=BIGINT},
            </if>
            <if test="record.orderNum != null">
                order_num = #{record.orderNum,jdbcType=INTEGER},
            </if>
            <if test="record.path != null">
                path = #{record.path,jdbcType=VARCHAR},
            </if>
            <if test="record.component != null">
                component = #{record.component,jdbcType=VARCHAR},
            </if>
            <if test="record.isFrame != null">
                is_frame = #{record.isFrame,jdbcType=INTEGER},
            </if>
            <if test="record.isCache != null">
                is_cache = #{record.isCache,jdbcType=INTEGER},
            </if>
            <if test="record.menuType != null">
                menu_type = #{record.menuType,jdbcType=CHAR},
            </if>
            <if test="record.visible != null">
                visible = #{record.visible,jdbcType=CHAR},
            </if>
            <if test="record.status != null">
                status = #{record.status,jdbcType=CHAR},
            </if>
            <if test="record.perms != null">
                perms = #{record.perms,jdbcType=VARCHAR},
            </if>
            <if test="record.icon != null">
                icon = #{record.icon,jdbcType=VARCHAR},
            </if>
            <if test="record.createBy != null">
                create_by = #{record.createBy,jdbcType=VARCHAR},
            </if>
            <if test="record.createTime != null">
                create_time = #{record.createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.updateBy != null">
                update_by = #{record.updateBy,jdbcType=VARCHAR},
            </if>
            <if test="record.updateTime != null">
                update_time = #{record.updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.remark != null">
                remark = #{record.remark,jdbcType=VARCHAR},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update sys_menu
        set menu_id = #{record.menuId,jdbcType=BIGINT},
        menu_name = #{record.menuName,jdbcType=VARCHAR},
        parent_id = #{record.parentId,jdbcType=BIGINT},
        order_num = #{record.orderNum,jdbcType=INTEGER},
        path = #{record.path,jdbcType=VARCHAR},
        component = #{record.component,jdbcType=VARCHAR},
        is_frame = #{record.isFrame,jdbcType=INTEGER},
        is_cache = #{record.isCache,jdbcType=INTEGER},
        menu_type = #{record.menuType,jdbcType=CHAR},
        visible = #{record.visible,jdbcType=CHAR},
        status = #{record.status,jdbcType=CHAR},
        perms = #{record.perms,jdbcType=VARCHAR},
        icon = #{record.icon,jdbcType=VARCHAR},
        create_by = #{record.createBy,jdbcType=VARCHAR},
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
        update_by = #{record.updateBy,jdbcType=VARCHAR},
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
        remark = #{record.remark,jdbcType=VARCHAR}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.nh.common.core.domain.entity.SysMenu">
        update sys_menu
        <set>
            <if test="menuName != null">
                menu_name = #{menuName,jdbcType=VARCHAR},
            </if>
            <if test="parentId != null">
                parent_id = #{parentId,jdbcType=BIGINT},
            </if>
            <if test="orderNum != null">
                order_num = #{orderNum,jdbcType=INTEGER},
            </if>
            <if test="path != null">
                path = #{path,jdbcType=VARCHAR},
            </if>
            <if test="component != null">
                component = #{component,jdbcType=VARCHAR},
            </if>
            <if test="isFrame != null">
                is_frame = #{isFrame,jdbcType=INTEGER},
            </if>
            <if test="isCache != null">
                is_cache = #{isCache,jdbcType=INTEGER},
            </if>
            <if test="menuType != null">
                menu_type = #{menuType,jdbcType=CHAR},
            </if>
            <if test="visible != null">
                visible = #{visible,jdbcType=CHAR},
            </if>
            <if test="status != null">
                status = #{status,jdbcType=CHAR},
            </if>
            <if test="perms != null">
                perms = #{perms,jdbcType=VARCHAR},
            </if>
            <if test="icon != null">
                icon = #{icon,jdbcType=VARCHAR},
            </if>
            <if test="createBy != null">
                create_by = #{createBy,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateBy != null">
                update_by = #{updateBy,jdbcType=VARCHAR},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="remark != null">
                remark = #{remark,jdbcType=VARCHAR},
            </if>
        </set>
        where menu_id = #{menuId,jdbcType=BIGINT}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.nh.common.core.domain.entity.SysMenu">
    update sys_menu
    set menu_name = #{menuName,jdbcType=VARCHAR},
      parent_id = #{parentId,jdbcType=BIGINT},
      order_num = #{orderNum,jdbcType=INTEGER},
      path = #{path,jdbcType=VARCHAR},
      component = #{component,jdbcType=VARCHAR},
      is_frame = #{isFrame,jdbcType=INTEGER},
      is_cache = #{isCache,jdbcType=INTEGER},
      menu_type = #{menuType,jdbcType=CHAR},
      visible = #{visible,jdbcType=CHAR},
      status = #{status,jdbcType=CHAR},
      perms = #{perms,jdbcType=VARCHAR},
      icon = #{icon,jdbcType=VARCHAR},
      create_by = #{createBy,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_by = #{updateBy,jdbcType=VARCHAR},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      remark = #{remark,jdbcType=VARCHAR}
    where menu_id = #{menuId,jdbcType=BIGINT}
  </update>

    <select id="selectMenuTreeByUserId" parameterType="Long" resultMap="BaseResultMap">
		select distinct m.menu_id, m.parent_id, m.menu_name, m.path, m.component, m.visible, m.status, ifnull(m.perms,'') as perms, m.is_frame, m.is_cache, m.menu_type, m.icon, m.order_num, m.create_time
		from sys_menu m
			 left join sys_role_menu rm on m.menu_id = rm.menu_id
			 left join sys_user_role ur on rm.role_id = ur.role_id
			 left join sys_role ro on ur.role_id = ro.role_id
			 left join sys_user u on ur.user_id = u.user_id
		where u.user_id = #{userId} and m.menu_type in ('M', 'C') and m.status = 0  AND ro.status = 0
		order by m.parent_id, m.order_num
	</select>

    <select id="selectMenuListByUserId" parameterType="SysMenu" resultMap="BaseResultMap">
        select distinct m.menu_id, m.parent_id, m.menu_name, m.path, m.component, m.visible, m.status,
        ifnull(m.perms,'') as perms, m.is_frame, m.is_cache, m.menu_type, m.icon, m.order_num, m.create_time
        from sys_menu m
        left join sys_role_menu rm on m.menu_id = rm.menu_id
        left join sys_user_role ur on rm.role_id = ur.role_id
        left join sys_role ro on ur.role_id = ro.role_id
        where ur.user_id = #{params.userId}
        <if test="menuName != null and menuName != ''">
            AND menu_name like concat('%', #{menuName}, '%')
        </if>
        <if test="visible != null and visible != ''">
            AND visible = #{visible}
        </if>
        <if test="status != null and status != ''">
            AND status = #{status}
        </if>
        order by m.parent_id, m.order_num
    </select>

    <resultMap type="SysMenu" id="SysMenuResult">
        <id     property="menuId"         column="menu_id"        />
        <result property="menuName"       column="menu_name"      />
        <result property="parentName"     column="parent_name"    />
        <result property="parentId"       column="parent_id"      />
        <result property="orderNum"       column="order_num"      />
        <result property="path"           column="path"           />
        <result property="component"      column="component"      />
        <result property="isFrame"        column="is_frame"       />
        <result property="isCache"        column="is_cache"       />
        <result property="menuType"       column="menu_type"      />
        <result property="visible"        column="visible"        />
        <result property="status"         column="status"         />
        <result property="perms"          column="perms"          />
        <result property="icon"           column="icon"           />
        <result property="createBy"       column="create_by"      />
        <result property="createTime"     column="create_time"    />
        <result property="updateTime"     column="update_time"    />
        <result property="updateBy"       column="update_by"      />
        <result property="remark"         column="remark"         />
    </resultMap>

    <select id="selectMenuTreeAll" resultMap="SysMenuResult">
		select distinct m.menu_id, m.parent_id, m.menu_name, m.path, m.component, m.visible, m.status, ifnull(m.perms,'') as perms, m.is_frame, m.is_cache, m.menu_type, m.icon, m.order_num, m.create_time
		from sys_menu m where m.menu_type in ('M', 'C') and m.status = 0
		order by m.parent_id, m.order_num
	</select>


    <select id="selectMenuPermsByUserId" parameterType="Long" resultType="String">
		select distinct m.perms
		from sys_menu m
			 left join sys_role_menu rm on m.menu_id = rm.menu_id
			 left join sys_user_role ur on rm.role_id = ur.role_id
			 left join sys_role r on r.role_id = ur.role_id
		where m.status = '0' and r.status = '0' and ur.user_id = #{userId}
	</select>


</mapper>